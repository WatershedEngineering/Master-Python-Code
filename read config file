# -*- coding: utf-8 -*-
"""
Created on Wed May 07 09:28:57 2014

@author: jesse
"""
   
def readconfigfile(filelocation):

#This function takes the location of config.txt as input and 
#returns a dictionary called configdict, with config variables
#as keys and the values as their values. configdict also
#includes the key 'returncode', whose value is a 0 if config.txt
#can't be found, a 1 if keys are missing from the dictionary,
#and a 2 if everything works. config.txt should be a text file,
#with each line formatted like this: 
#key : value 
    
    def configreadline(var_line, configdict): #reads a line of the config file and adds it to configdict
        #global configdict #makes configdict global
        var_line = var_line.replace(" ", "") #remove spaces from var_line
        var_line = var_line.strip('\n') #removes newline characters from var_line
        var_list = var_line.split(":") #changes var_line from a string into a two-part list, splitting it on either side of the colon
        configdict[var_list[0]] = var_list[1] #adds var_list to configdict, with var_list[0] as the key and var_list[1] the value
        return configdict
        
    configdict = {}  #dictionary to store config values
    
    try:
        f = open(r"C:\Users\jesse\Desktop\config.txt", "r") #open the file config.txt in the cwd
    except:
        print "Can't find config file - error", 0 #if the file can't be found
        configdict['returncode'] = 0
    
    with open(r"C:\Users\jesse\Desktop\config.txt",'r') as f: #run configreadline() on each line of config.txt and stop after the last line
        while True:
            line=f.readline()
            if not line: break
            configdict = configreadline(line, configdict)
    
    #make sure all they keys are in the dictionary that should be
    if ('db_host'in configdict and
        'db_passwd' in configdict and
        'db_user' in configdict and
        'db' in configdict and
        'plotly_username' in configdict and
        'plotly_pw' in configdict and
        'alarm_user_email' in configdict and
        'alarm_user_cell_email' in configdict and
        'gmail_user' in configdict and
        'gmail_pw' in configdict and
        'EKM1' in configdict and
        'EKM2' in configdict and
        'streaming_code_1' in configdict and
        'streaming_code_2' in configdict and
        'streaming_code_3' in configdict and 
        'streaming_code_4' in configdict and
        'streaming_code_5' in configdict and
        'streaming_code_6' in configdict and
        'streaming_code_7' in configdict and
        'streaming_code_8' in configdict and
        'streaming_code_9' in configdict and
        'streaming_code_10' in configdict and
        'streaming_code_11' in configdict and
        'streaming_code_12' in configdict and
        'streaming_code_13' in configdict and
        'streaming_code_14' in configdict and
        'upper_depth_offset' in configdict and
        'lower_depth_offset' in configdict and
        'abovedam_depth_up_alarm' in configdict and
        'abovedam_depth_down_alarm' in configdict and
        'belowdam_depth_up_alarm' in configdict and
        'rpm_port_1' in configdict and
        'rpm_port_2' in configdict and
        'EKM_port' in configdict and
        'depth_port' in configdict):
            
        print configdict 
        configdict['returncode'] = 2
        print 'all good -', 2
    else:
        print configdict    
        print "you're missing stuff - error", 1
        configdict['returncode'] = 1
    
    return configdict
    f.close() #close the file

readconfigfile(r"C:\Users\jesse\Desktop\config.txt")
